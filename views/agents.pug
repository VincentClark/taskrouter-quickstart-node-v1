
doctype html
html
    head
        title Agents
        link(rel='stylesheet', href='//media.twiliocdn.com/taskrouter/quickstart/agent.css')
        script(
        src= 'https://sdk.twilio.com/js/taskrouter/v1.21/taskrouter.min.js'
        integrity= 'sha384-5fq+0qjayReAreRyHy38VpD3Gr9R2OYIzonwIkoGI4M9dhfKW6RWeRnZjfwSrpN8' crossorigin='anonymous')
        
        script.
            console.log("enter");
            // Subscribe to a subset of the available TaskRouter.js events for a worker sync
            function registerTaskRouterCallbacks() {
                worker.on('ready', function(worker) {
                    agentActivityChanged(worker.activityName);
                    logger("Succesffuly resgistered as: "+ worker.friendlyName)
                    logger("Currently active activity: " + worker.activityName)
                })

                worker.on("activity.update", function(worker) {
                    agentActivityChanged(worker.activityName);
                    logger("Worker activity changed to: " + worker.activityName);
                })

                worker.on("reservation.created", function(reservation) {
                    logger("------");
                    logger("You have been reserved to handle a call");
                    logger("Call from: " + reservation.task.attributes.from);
                    logger("Selected language:" + reservation.task.attributes.selected_language);
                    logger("------");
                })

                worker.on("reservation.accepted", function(reservation) {
                    logger("Reservation " + reservation.sid + " accepted");
                })

                worker.on("reservation.rejected", function(reservation) {
                    logger("Reservation " + reservation.sid + " rejected");
                })

                worker.on("reservation.timeout", function(reservation) {
                    logger("Reservation " + reservation.sid + " timed out");
                })
                worker.on('reservation.canceled', function(reservation) {
                    logger(`Reservation ${reservation.sid} ${canceled}`);
                })
            }
                // Hook up the agent Activity buttons to TaskRouter.js 
            function bindAgentActivityButtons() {
                // Fetch the full list of available Activities from TaskRouter. Store each
                // ActivitySid against the matching Friendly Name
                var activitySids = {};
                worker.activities.fetch(function(error, activityList) {
                    var activities = activityList.data;
                    var i = activities.length;
                    while (i--) {
                        activitySids[activities[i].friendlyName] = activities[i].sid;
                    }
                });

                var elements = document.getElementsByClassName('change-activity');
                var i = elements.length;
                while (i--) {
                    elements[i].onclick = function() {
                        var nextActivity = this.dataset.nextActivity;
                        var nextActivitySid = activitySids[nextActivity];
                        worker.update({"ActivitySid":nextActivitySid});
                    }
                }
            }

            // Update the UI to reflect a change in Activity

            function agentActivityChanged(activity) {
                hideAgentActivities();
                showAgentActivity(activity);
            }

            function hideAgentActivities() {
                var elements = document.getElementsByClassName('agent-activity');
                var i = elements.length;
                while (i--) {
                    elements[i].style.display = 'none';
                }
            }

            function showAgentActivity(activity) {
                activity = activity.toLowerCase();
                var elements = document.getElementsByClassName(('agent-activity ' + activity));
                elements.item(0).style.display = 'block';
            }

            /* Other stuff */

            function logger(message) {
                var log = document.getElementById('log');
                log.value += "\n> " + message;
                log.scrollTop = log.scrollHeight;
            }

            window.onload = function() {
                console.log("onLoad")
                // Initialize TaskRouter.js on page load using window.workerToken -
                // a Twilio Capability token that was set from rendering the template with agents endpoint
                logger("Initializing...");
                window.worker = new Twilio.TaskRouter.Worker("#{worker_token}");

                registerTaskRouterCallbacks();
                bindAgentActivityButtons();
            };
   
    body
        div(class="content")
            section(class="agent-activity offline")
                p(class="activity")
                    span Offline
                button(class="change-activity" data-next-activity="Idle")
                    Go Available
            section(class="agent-activity idle")
                p(class="activity")
                    span Available
                button(class="change-activity" data-next-activity="Offline")
                    Go Offline
            section(class="agent-activity reserved")
                p(class="activity")
                    Reserved
            section(class="agent-activity busy")
                p(class="activity")
                    Busy
            section(class="agent-activity wrapup")
                p(class="activity")
                    Wrap-Up
                    button(class="change-activity" data-next-activity="Idle")
                        Go Available
                    button(class="change-activity" data-next-activity="Offline")
                        Go Offline
            section(class="log")
                textarea(id="log" readonly="true")